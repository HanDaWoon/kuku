3.1. for문
이번장에서는 for문에 대해서 알아보겠습니다.
for문은 반복문이라고도 하며, 특정한 코드를 반복적으로 실행시키는데 사용됩니다.
for문은 다음과 같은 형태를 가집니다.
[
    for(초기화; 조건식; 증감식) {
        실행문;
    }
]
초기화구문은 for문이 시작될 때 한 번만 실행됩니다.
조건식은 for문이 반복될 때마다 실행되며,
조건식의 결과가 참이면 for문 안의 실행문을 실행하고, 거짓이면 for문을 빠져나갑니다.
증감식은 for문이 반복될 때마다 실행되며,
증감식을 통해 for 내부문장을 지정된 횟수만큼 반복하거나
특정 조건이 만족될 때까지 반복할 수 있습니다.
for문은 다음과 같이 사용합니다.
[
    #include <stdio.h>
    int main() {
        int i;
        for(i=0; i<10; i++) {
            printf("Hello World! %d\n", i);
        }
        return 0;
    }
]
실행 결과는 다음과 같습니다.
Hello World! 0
Hello World! 1
.
.
.
Hello World! 8
Hello World! 9

3.1.1. 1부터 n까지의 합 구하기
for문을 이용하여 1부터 n까지의 합을 구하는 프로그램을 작성해보겠습니다.
[
    #include <stdio.h>
    int main() {
        int i, n, sum=0;
        printf("n을 입력하세요: ");
        scanf("%d", &n);
        for(i=1; i<=n; i++) {
            sum += i;
        }
        printf("1부터 %d까지의 합은 %d입니다.\n", n, sum);
        return 0;
    }
]
실행 결과는 다음과 같습니다.
n을 입력하세요: (예를들어 20을 입력)
1부터 20까지의 합은 210입니다.

3.2. while문
while문은 조건식이 참인 동안에 반복적으로 실행되는 반복문입니다.
while문은 다음과 같은 형태를 가집니다.
[
    while(조건식) {
        실행문;
    }
]
조건식은 while문이 반복될 때마다 실행되며,
조건식의 결과가 참이면 while문 안의 실행문을 실행하고, 거짓이면 while문을 빠져나갑니다.
while문은 다음과 같이 사용합니다.
[
    #include <stdio.h>
    int main() {
        int i = 0;
        while(i<10) {
            printf("Hello World! %d\n", i);
            i++;
        }
        return 0;
    }
]
실행 결과는 다음과 같습니다.
Hello World! 0
Hello World! 1
.
.
.
Hello World! 8
Hello World! 9

3.2.1. 계단 식 별찍기
while문을 이용하여 별을 찍는 프로그램을 작성해보겠습니다.
[
    #include <stdio.h>
    int main() {
        int i;
        scanf("%d", &i);        // i는 줄의 개수
        while(i>0) {            // i가 0보다 클 때까지 반복
            int j = i;          // j에 i를 대입 j는 한 줄에 찍을 별의 개수

            while(j>0) {        // j가 0보다 클 때까지 반복
                printf("*");    
                j--;            // 별을 찍고 나면 j를 1 감소
            }

            printf("\n");
            i--;                // 줄을 바꾸고 나면 i를 1 감소
        }

        return 0;
    }
]
실행 결과는 다음과 같습니다.
i를 입력하세요: (예를들어 5를 입력)
*****
****
***
**
*

3.3. do-while문
do-while문은 while문과 비슷하지만,
while문은 조건을 검사하고 반복을 실행하지만,
do-while문은 반복을 먼저 실행하고 조건을 검사합니다.
do-while문은 다음과 같은 형태를 가집니다.
[
do {
    실행문;
} while(조건식);
do-while문은 다음과 같이 사용합니다.
    #include <stdio.h>
    int main() {
        int i = 0;
        do {
            printf("Hello World! %d\n", i);
            i++;
        } while(i<10);
        return 0;
    }
]
실행 결과는 다음과 같습니다.
Hello World! 0
Hello World! 1
.
.
.
Hello World! 8
Hello World! 9

3.3.1. 메뉴판 고르기
do-while문을 이용하여 메뉴판을 만들어보겠습니다.
[
    #include <stdio.h>
    int main() {
        int menu;
        do {
            printf("1. 햄버거\n");
            printf("2. 치킨\n");
            printf("3. 피자\n");
            printf("4. 종료\n");
            printf("메뉴를 선택하세요: ");
            scanf("%d", &menu);
            switch(menu) {
                case 1:
                    printf("햄버거를 선택하셨습니다.\n");
                    break;
                case 2:
                    printf("치킨을 선택하셨습니다.\n");
                    break;
                case 3:
                    printf("피자를 선택하셨습니다.\n");
                    break;
                case 4:
                    printf("종료합니다.\n");
                    break;
                default:
                    printf("잘못된 메뉴를 선택하셨습니다.\n");
            }
        } while(menu!=4);
        printf("프로그램을 종료합니다.\n");
        return 0;
    }
]
실행 결과는 다음과 같습니다.
1. 햄버거
2. 치킨
3. 피자
4. 종료
메뉴를 선택하세요: (예를들어 1을 입력)
햄버거를 선택하셨습니다.
메뉴를 선택하세요: (예를들어 3을 입력)
피자를 선택하셨습니다.
메뉴를 선택하세요: (예를들어 5를 입력)
잘못된 메뉴를 선택하셨습니다.
메뉴를 선택하세요: (예를들어 4를 입력)
종료합니다.
프로그램을 종료합니다.
