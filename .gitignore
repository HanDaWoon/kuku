################# 프로젝트 #########################


################# VS Code ##########################

.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix


################# Node ##########################

# Logs
front/logs
front/*.log
front/npm-debug.log*
front/yarn-debug.log*
front/yarn-error.log*
front/lerna-debug.log*
front/.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
front/report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
front/pids
front/*.pid
front/*.seed
front/*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
front/lib-cov

# Coverage directory used by tools like istanbul
front/coverage
front/*.lcov

# nyc test coverage
front/.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
front/.grunt

# Bower dependency directory (https://bower.io/)
front/bower_components

# node-waf configuration
front/.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
front/build/Release

# Dependency directories
front/node_modules/
front/jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
front/web_modules/

# TypeScript cache
front/*.tsbuildinfo

# Optional npm cache directory
front/.npm

# Optional eslint cache
front/.eslintcache

# Optional stylelint cache
front/.stylelintcache

# Microbundle cache
front/.rpt2_cache/
front/.rts2_cache_cjs/
front/.rts2_cache_es/
front/.rts2_cache_umd/

# Optional REPL history
front/.node_repl_history

# Output of 'npm pack'
front/*.tgz

# Yarn Integrity file
front/.yarn-integrity

# dotenv environment variable files
front/.env
front/.env.development.local
front/.env.test.local
front/.env.production.local
front/.env.local

# parcel-bundler cache (https://parceljs.org/)
front/.cache
front/.parcel-cache

# Next.js build output
front/.next
front/out

# Nuxt.js build / generate output
front/.nuxt
front/dist

# Gatsby files
front/.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
front/.vuepress/dist

# vuepress v2.x temp and cache directory
front/.temp
front/.cache

# Docusaurus cache and generated files
front/.docusaurus

# Serverless directories
front/.serverless/

# FuseBox cache
front/.fusebox/

# DynamoDB Local files
front/.dynamodb/

# TernJS port file
front/.tern-port

# Stores VSCode versions used for testing VSCode extensions
front/.vscode-test

# yarn v2
front/.yarn/cache
front/.yarn/unplugged
front/.yarn/build-state.yml
front/.yarn/install-state.gz
front/.pnp.*



################# Python ##########################
# Byte-compiled / optimized / DLL files
backend/__pycache__/
backend/*.py[cod]
backend/*$py.class

# C extensions
backend/*.so

# Distribution / packaging
backend/.Python
backend/build/
backend/develop-eggs/
backend/dist/
backend/downloads/
backend/eggs/
backend/.eggs/
backend/lib/
backend/lib64/
backend/parts/
backend/sdist/
backend/var/
backend/wheels/
backend/share/python-wheels/
backend/*.egg-info/
backend/.installed.cfg
backend/*.egg
backend/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
backend/*.manifest
backend/*.spec

# Installer logs
backend/pip-log.txt
backend/pip-delete-this-directory.txt

# Unit test / coverage reports
backend/htmlcov/
backend/.tox/
backend/.nox/
backend/.coverage
backend/.coverage.*
backend/.cache
backend/nosetests.xml
backend/coverage.xml
backend/*.cover
backend/*.py,cover
backend/.hypothesis/
backend/.pytest_cache/
backend/cover/

# Translations
backend/*.mo
backend/*.pot

# Django stuff:
backend/*.log
backend/local_settings.py
backend/db.sqlite3
backend/db.sqlite3-journal

# Flask stuff:
backend/instance/
backend/.webassets-cache

# Scrapy stuff:
backend/.scrapy

# Sphinx documentation
backend/docs/_build/

# PyBuilder
backend/.pybuilder/
backend/target/

# Jupyter Notebook
backend/.ipynb_checkpoints

# IPython
backend/profile_default/
backend/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
backend/.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
backend/__pypackages__/

# Celery stuff
backend/celerybeat-schedule
backend/celerybeat.pid

# SageMath parsed files
backend/*.sage.py

# Environments
backend/.env
backend/.venv
backend/env/
backend/venv/
backend/ENV/
backend/env.bak/
backend/venv.bak/

# Spyder project settings
backend/.spyderproject
backend/.spyproject

# Rope project settings
backend/.ropeproject

# mkdocs documentation
backend//site

# mypy
backend/.mypy_cache/
backend/.dmypy.json
backend/dmypy.json

# Pyre type checker
backend/.pyre/

# pytype static type analyzer
backend/.pytype/

# Cython debug symbols
backend/cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
